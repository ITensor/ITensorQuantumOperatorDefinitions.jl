var documenterSearchIndex = {"docs":
[{"location":"reference/#Reference","page":"Reference","title":"Reference","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"Modules = [ITensorQuantumOperatorDefinitions]","category":"page"},{"location":"reference/#ITensorQuantumOperatorDefinitions.siteinds-Tuple{Function, Integer}","page":"Reference","title":"ITensorQuantumOperatorDefinitions.siteinds","text":"siteinds(f::Function, N::Integer; kwargs...)\n\nCreate an array of N physical site indices where the site type at site n is given by f(n) (f should return a string).\n\n\n\n\n\n","category":"method"},{"location":"reference/#ITensorQuantumOperatorDefinitions.siteinds-Tuple{Integer, Integer}","page":"Reference","title":"ITensorQuantumOperatorDefinitions.siteinds","text":"siteinds(d::Integer, N::Integer; kwargs...)\n\nCreate an array of N site indices, each of dimension d.\n\nKeywords\n\naddtags::String: additional tags to be added to all indices\n\n\n\n\n\n","category":"method"},{"location":"reference/#ITensorQuantumOperatorDefinitions.siteinds-Tuple{String, Integer}","page":"Reference","title":"ITensorQuantumOperatorDefinitions.siteinds","text":"siteinds(tag::String, N::Integer; kwargs...)\n\nCreate an array of N physical site indices of type tag. Keyword arguments can be used to specify quantum number conservation, see the space function corresponding to the site type tag for supported keyword arguments.\n\nExample\n\nN = 10\ns = siteinds(\"S=1/2\", N; conserve_qns=true)\n\n\n\n\n\n","category":"method"},{"location":"reference/#ITensorQuantumOperatorDefinitions.space-Tuple{ITensorQuantumOperatorDefinitions.SiteType{:Boson}}","page":"Reference","title":"ITensorQuantumOperatorDefinitions.space","text":"space(::SiteType\"Boson\";\n      dim = 2,\n      conserve_qns = false,\n      conserve_number = false,\n      qnname_number = \"Number\")\n\nCreate the Hilbert space for a site of type \"Boson\".\n\nOptionally specify the conserved symmetries and their quantum number labels.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ITensorQuantumOperatorDefinitions.space-Tuple{ITensorQuantumOperatorDefinitions.SiteType{:Electron}}","page":"Reference","title":"ITensorQuantumOperatorDefinitions.space","text":"space(::SiteType\"Electron\";\n      conserve_qns = false,\n      conserve_sz = conserve_qns,\n      conserve_nf = conserve_qns,\n      conserve_nfparity = conserve_qns,\n      qnname_sz = \"Sz\",\n      qnname_nf = \"Nf\",\n      qnname_nfparity = \"NfParity\")\n\nCreate the Hilbert space for a site of type \"Electron\".\n\nOptionally specify the conserved symmetries and their quantum number labels.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ITensorQuantumOperatorDefinitions.space-Tuple{ITensorQuantumOperatorDefinitions.SiteType{:Fermion}}","page":"Reference","title":"ITensorQuantumOperatorDefinitions.space","text":"space(::SiteType\"Fermion\";\n      conserve_qns=false,\n      conserve_nf=conserve_qns,\n      conserve_nfparity=conserve_qns,\n      qnname_nf = \"Nf\",\n      qnname_nfparity = \"NfParity\",\n      qnname_sz = \"Sz\",\n      conserve_sz = false)\n\nCreate the Hilbert space for a site of type \"Fermion\".\n\nOptionally specify the conserved symmetries and their quantum number labels.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ITensorQuantumOperatorDefinitions.space-Tuple{ITensorQuantumOperatorDefinitions.SiteType{:Qubit}}","page":"Reference","title":"ITensorQuantumOperatorDefinitions.space","text":"space(::SiteType\"Qubit\";\n      conserve_qns = false,\n      conserve_parity = conserve_qns,\n      conserve_number = false,\n      qnname_parity = \"Parity\",\n      qnname_number = \"Number\")\n\nCreate the Hilbert space for a site of type \"Qubit\".\n\nOptionally specify the conserved symmetries and their quantum number labels.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ITensorQuantumOperatorDefinitions.space-Tuple{ITensorQuantumOperatorDefinitions.SiteType{:Qudit}}","page":"Reference","title":"ITensorQuantumOperatorDefinitions.space","text":"space(::SiteType\"Qudit\";\n      dim = 2,\n      conserve_qns = false,\n      conserve_number = false,\n      qnname_number = \"Number\")\n\nCreate the Hilbert space for a site of type \"Qudit\".\n\nOptionally specify the conserved symmetries and their quantum number labels.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ITensorQuantumOperatorDefinitions.space-Tuple{ITensorQuantumOperatorDefinitions.SiteType{:tJ}}","page":"Reference","title":"ITensorQuantumOperatorDefinitions.space","text":"space(::SiteType\"tJ\";\n      conserve_qns = false,\n      conserve_sz = conserve_qns,\n      conserve_nf = conserve_qns,\n      conserve_nfparity = conserve_qns,\n      qnname_sz = \"Sz\",\n      qnname_nf = \"Nf\",\n      qnname_nfparity = \"NfParity\")\n\nCreate the Hilbert space for a site of type \"tJ\".\n\nOptionally specify the conserved symmetries and their quantum number labels.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ITensorQuantumOperatorDefinitions.space-Tuple{ITensorQuantumOperatorDefinitions.SiteType{Symbol(\"S=1\")}}","page":"Reference","title":"ITensorQuantumOperatorDefinitions.space","text":"space(::SiteType\"S=1\";\n      conserve_qns = false,\n      conserve_sz = conserve_qns,\n      qnname_sz = \"Sz\")\n\nCreate the Hilbert space for a site of type \"S=1\".\n\nOptionally specify the conserved symmetries and their quantum number labels.\n\n\n\n\n\n","category":"method"},{"location":"reference/#ITensorQuantumOperatorDefinitions.space-Tuple{ITensorQuantumOperatorDefinitions.SiteType{Symbol(\"S=1/2\")}}","page":"Reference","title":"ITensorQuantumOperatorDefinitions.space","text":"space(::SiteType\"S=1/2\";\n      conserve_qns = false,\n      conserve_sz = conserve_qns,\n      conserve_szparity = false,\n      qnname_sz = \"Sz\",\n      qnname_szparity = \"SzParity\")\n\nCreate the Hilbert space for a site of type \"S=1/2\".\n\nOptionally specify the conserved symmetries and their quantum number labels.\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"EditURL = \"../../examples/README.jl\"","category":"page"},{"location":"#ITensorQuantumOperatorDefinitions.jl","page":"Home","title":"ITensorQuantumOperatorDefinitions.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"(Image: Stable) (Image: Dev) (Image: Build Status) (Image: Coverage) (Image: Code Style: Blue) (Image: Aqua)","category":"page"},{"location":"#Installation-instructions","page":"Home","title":"Installation instructions","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This package resides in the ITensor/ITensorRegistry local registry. In order to install, simply add that registry through your package manager. This step is only required once.","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using Pkg: Pkg\n\njulia> Pkg.Registry.add(url=\"https://github.com/ITensor/ITensorRegistry\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"or:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> Pkg.Registry.add(url=\"git@github.com:ITensor/ITensorRegistry.git\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"if you want to use SSH credentials, which can make it so you don't have to enter your Github ursername and password when registering packages.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Then, the package can be added as usual through the package manager:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> Pkg.add(\"ITensorQuantumOperatorDefinitions\")","category":"page"},{"location":"#Examples","page":"Home","title":"Examples","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using ITensorBase: ITensor, Index, tags\nusing ITensorQuantumOperatorDefinitions:\n  OpName, SiteType, StateName, ValName, op, siteind, siteinds, state, val\nusing Test: @test","category":"page"},{"location":"","page":"Home","title":"Home","text":"States and operators as Julia arrays","category":"page"},{"location":"","page":"Home","title":"Home","text":"@test val(ValName(\"Up\"), SiteType(\"S=1/2\")) == 1\n@test val(ValName(\"Dn\"), SiteType(\"S=1/2\")) == 2\n@test state(StateName(\"Up\"), SiteType(\"S=1/2\")) == [1, 0]\n@test state(StateName(\"Dn\"), SiteType(\"S=1/2\")) == [0, 1]\n@test op(OpName(\"X\"), SiteType(\"S=1/2\")) == [0 1; 1 0]\n@test op(OpName(\"Z\"), SiteType(\"S=1/2\")) == [1 0; 0 -1]","category":"page"},{"location":"","page":"Home","title":"Home","text":"Index constructors","category":"page"},{"location":"","page":"Home","title":"Home","text":"@test siteind(\"S=1/2\") isa Index\n@test Int(length(siteind(\"S=1/2\"))) == 2\n@test \"S=1/2\" in tags(siteind(\"S=1/2\"))\n@test siteinds(\"S=1/2\", 4) isa Vector{<:Index}\n@test length(siteinds(\"S=1/2\", 4)) == 4\n@test all(s -> \"S=1/2\" in tags(s), siteinds(\"S=1/2\", 4))","category":"page"},{"location":"","page":"Home","title":"Home","text":"States and operators as ITensors","category":"page"},{"location":"","page":"Home","title":"Home","text":"s = Index(2, \"S=1/2\")\n@test val(s, \"Up\") == 1\n@test val(s, \"Dn\") == 2\n@test state(\"Up\", s) == ITensor([1, 0], (s,))\n@test state(\"Dn\", s) == ITensor([0, 1], (s,))\n@test op(\"X\", s) == ITensor([0 1; 1 0], (s', s))\n@test op(\"Z\", s) == ITensor([1 0; 0 -1], (s', s))","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"This page was generated using Literate.jl.","category":"page"}]
}
